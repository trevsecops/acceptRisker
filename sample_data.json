{'id': '231722', 'name': 'Linux Distros Unpatched Vulnerability : CVE-2024-56720', 'description': 'The Linux/Unix host has one or more packages installed that are impacted by a vulnerability without a vendor supplied patch available.\n\n  - In the Linux kernel, the following vulnerability has been resolved: bpf, sockmap: Several fixes to     bpf_msg_pop_data Several fixes to bpf_msg_pop_data, 1. In sk_msg_shift_left, we should put_page 2. if (len     == 0), return early is better 3. pop the entire sk_msg (last == msg->sg.size) should be supported 4. Fix     for the value of variable a 5. In sk_msg_shift_left, after shifting, i has already pointed to the next     element. Addtional sk_msg_iter_var_next may result in BUG. (CVE-2024-56720)\n\nNote that Nessus relies on the presence of the package as reported by the vendor.'}
{'id': '231723', 'name': 'Linux Distros Unpatched Vulnerability : CVE-2024-53160', 'description': 'The Linux/Unix host has one or more packages installed that are impacted by a vulnerability without a vendor supplied patch available.\n\n  - In the Linux kernel, the following vulnerability has been resolved: rcu/kvfree: Fix data-race in\n    __mod_timer / kvfree_call_rcu KCSAN reports a data race when access the krcp->monitor_work.timer.expires     variable in the schedule_delayed_monitor_work() function: <snip> BUG: KCSAN: data-race in __mod_timer /     kvfree_call_rcu read to 0xffff888237d1cce8 of 8 bytes by task 10149 on cpu 1:\n    schedule_delayed_monitor_work kernel/rcu/tree.c:3520 [inline] kvfree_call_rcu+0x3b8/0x510     kernel/rcu/tree.c:3839 trie_update_elem+0x47c/0x620 kernel/bpf/lpm_trie.c:441     bpf_map_update_value+0x324/0x350 kernel/bpf/syscall.c:203 generic_map_update_batch+0x401/0x520     kernel/bpf/syscall.c:1849 bpf_map_do_batch+0x28c/0x3f0 kernel/bpf/syscall.c:5143 __sys_bpf+0x2e5/0x7a0\n    __do_sys_bpf kernel/bpf/syscall.c:5741 [inline] __se_sys_bpf kernel/bpf/syscall.c:5739 [inline]\n    __x64_sys_bpf+0x43/0x50 kernel/bpf/syscall.c:5739 x64_sys_call+0x2625/0x2d60     arch/x86/include/generated/asm/syscalls_64.h:322 do_syscall_x64 arch/x86/entry/common.c:52 [inline]     do_syscall_64+0xc9/0x1c0 arch/x86/entry/common.c:83 entry_SYSCALL_64_after_hwframe+0x77/0x7f write to     0xffff888237d1cce8 of 8 bytes by task 56 on cpu 0: __mod_timer+0x578/0x7f0 kernel/time/timer.c:1173     add_timer_global+0x51/0x70 kernel/time/timer.c:1330 __queue_delayed_work+0x127/0x1a0     kernel/workqueue.c:2523 queue_delayed_work_on+0xdf/0x190 kernel/workqueue.c:2552 queue_delayed_work     include/linux/workqueue.h:677 [inline] schedule_delayed_monitor_work kernel/rcu/tree.c:3525 [inline]     kfree_rcu_monitor+0x5e8/0x660 kernel/rcu/tree.c:3643 process_one_work kernel/workqueue.c:3229 [inline]     process_scheduled_works+0x483/0x9a0 kernel/workqueue.c:3310 worker_thread+0x51d/0x6f0     kernel/workqueue.c:3391 kthread+0x1d1/0x210 kernel/kthread.c:389 ret_from_fork+0x4b/0x60     arch/x86/kernel/process.c:147 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244 Reported by Kernel     Concurrency Sanitizer on: CPU: 0 UID: 0 PID: 56 Comm: kworker/u8:4 Not tainted     6.12.0-rc2-syzkaller-00050-g5b7c893ed5ed #0 Hardware name: Google Google Compute Engine/Google Compute     Engine, BIOS Google 09/13/2024 Workqueue: events_unbound kfree_rcu_monitor <snip> kfree_rcu_monitor()     rearms the work if a krcp has to be still offloaded and this is done without holding krcp->lock, whereas     the kvfree_call_rcu() holds it. Fix it by acquiring the krcp->lock for kfree_rcu_monitor() so both     functions do not race anymore. (CVE-2024-53160)\n\nNote that Nessus relies on the presence of the package as reported by the vendor.'}
{'id': '231724', 'name': 'Linux Distros Unpatched Vulnerability : CVE-2024-56539', 'description': "The Linux/Unix host has one or more packages installed that are impacted by a vulnerability without a vendor supplied patch available.\n\n  - wifi: mwifiex: Fix memcpy() field-spanning write warning in mwifiex_config_scan() Replace one-element     array with a flexible-array member in `struct mwifiex_ie_types_wildcard_ssid_params` to fix the following     warning on a MT8173 Chromebook (mt8173-elm-hana): [ 356.775250] ------------[ cut here ]------------ [     356.784543] memcpy: detected field-spanning write (size 6) of single field wildcard_ssid_tlv->ssid at     drivers/net/wireless/marvell/mwifiex/scan.c:904 (size 1) [ 356.813403] WARNING: CPU: 3 PID: 742 at     drivers/net/wireless/marvell/mwifiex/scan.c:904 mwifiex_scan_networks+0x4fc/0xf28 [mwifiex] The (size 6)     above is exactly the length of the SSID of the network this device was connected to. The source of the     warning looks like: ssid_len = user_scan_in->ssid_list[i].ssid_len; [...] memcpy(wildcard_ssid_tlv->ssid,     user_scan_in->ssid_list[i].ssid, ssid_len); There is a #define WILDCARD_SSID_TLV_MAX_SIZE that uses     sizeof() on this struct, but it already didn't account for the size of the one-element array, so it     doesn't need to be changed. (CVE-2024-56539)\n\nNote that Nessus relies on the presence of the package as reported by the vendor."}
